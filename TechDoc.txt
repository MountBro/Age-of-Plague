Table of Contents
─────────────────

1 Architecture
2 Elm files
3 Introduction

1 Architecture
══════════════

  The game is written mainly in elm, with the aid of css for styling and
  js for handling sound effects.  `Browser.document' is used for the
  overall architecture ( see [package Browser] for more details).


[package Browser]
https://package.elm-lang.org/packages/elm/browser/latest/Browser#document


2 Elm files
═══════════

  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   file name                                                                                                                                                          functionality
   Action.elm, InitLevel.elm, NextRound.elm, RegionFill.elm, Todo.elm, Update.elm                                                                                     funtions for update
   Card.elm                                                                                                                                                           definition of card
   ColorScheme.elm, GameViewBasic.elm, GameViewButtons, GameViewCards, GameView.elm, GameViewTiles.elm, SvgDefs.elm, SvgSrc.elm, ViewCards.elm, View.elm, ViewMP.elm  view
   Geometry.elm, Parameters                                                                                                                                           geometric definitions and parameters
   Main.elm                                                                                                                                                           declaration of architecture
   Message.elm                                                                                                                                                        messages
   Model.elm                                                                                                                                                          model
   Population.elm, Tile.elm, Map.elm                                                                                                                                  types and functions for city
   Ports.elm                                                                                                                                                          Interaction with js
   Virus.elm                                                                                                                                                          types and functions for virus
  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


4 Introduction
══════════════

The main goal of this project is to accomplish a Trading Card Game
(TCG) with relatively high playability. The game is also expected
to be related to the real world. Up to the moment this document
is finished, there have been two tutorial levels, three formal
levels and an endless mode in the game. To associate with the
real world, which is facing the COVID-19 when designing this
project, the game is set in a postwar world where plague
and viruses are running wild.


5. Theory
═════════

In this game, the virus transmission algorithm adaptes there
method of "Conway's Game of Life". Detailed transmission of
this algorithm could be found in the file Population.elm
and Virus.elm
